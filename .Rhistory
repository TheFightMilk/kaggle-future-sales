as.vector(forecase(ses(y),h=1)$mean)
as.vector(forecast(ses(y),h=1)$mean)
as.vector(forecast(auto.arima(y),h=1,level=95)$mean)
as.vector(dotm(y,h=1,level=95)$mean)
median(ets,ces,ses,arima,dotm)
ets<- as.vector(forecast(ets(y), h=1, level=95)$mean)
# CES
ces <- as.vector(auto.ces(y,h=1,interval="p",level=.95)$forecast)
#SES
ses <- as.vector(forecast(ses(y),h=1)$mean)
# AutoArima
arima <- as.vector(forecast(auto.arima(y),h=1,level=95)$mean)
# Dotm
dotm <- as.vector(dotm(y,h=1,level=95)$mean)
median(ets,ces,ses,arima,dotm)
#Comb
fcs.comb <- median(ets,ces,ses,arima,dotm)
t1 <- Sys.time()
cl <- makeCluster(11, outfile="")
registerDoParallel(cl)
scum.fcs <- foreach(i = 1:1000,.combine = 'rbind',.inorder=FALSE,
.packages=c('data.table','forecast','forecTheta', 'smooth'))%dopar%{
y <- ts(as.numeric(train_month[ID==ID[i],-c("ID")]),frequency=12)
# ETS
ets<- as.vector(forecast(ets(y), h=1, level=95)$mean)
# CES
ces <- as.vector(auto.ces(y,h=1,interval="p",level=.95)$forecast)
#SES
ses <- as.vector(forecast(ses(y),h=1)$mean)
# AutoArima
arima <- as.vector(forecast(auto.arima(y),h=1,level=95)$mean)
# Dotm
dotm <- as.vector(dotm(y,h=1,level=95)$mean)
#Comb
fcs.comb <- median(ets,ces,ses,arima,dotm)
c(ets,ces,ses,arima,dotm,fcs.comb)
}
stopCluster(cl)
Sys.time()-t1 #
t1 <- Sys.time()
cl <- makeCluster(11, outfile="")
registerDoParallel(cl)
scum.fcs <- foreach(i = 1:1000,.combine = 'rbind',.inorder=FALSE,
.packages=c('data.table','forecast','forecTheta', 'smooth'),.verbose = T)%dopar%{
y <- ts(as.numeric(train_month[ID==ID[i],-c("ID")]),frequency=12)
# ETS
ets<- as.vector(forecast(ets(y), h=1, level=95)$mean)
# CES
ces <- as.vector(auto.ces(y,h=1,interval="p",level=.95)$forecast)
#SES
ses <- as.vector(forecast(ses(y),h=1)$mean)
# AutoArima
arima <- as.vector(forecast(auto.arima(y),h=1,level=95)$mean)
# Dotm
dotm <- as.vector(dotm(y,h=1,level=95)$mean)
#Comb
fcs.comb <- median(ets,ces,ses,arima,dotm)
c(ets,ces,ses,arima,dotm,fcs.comb)
}
stopCluster(cl)
Sys.time()-t1 #
###
t1 <- Sys.time()
cl <- makeCluster(11, outfile="")
registerDoParallel(cl)
scum.fcs <- foreach(i = 100:1000,.combine = 'rbind',.inorder=FALSE,
.packages=c('data.table','forecast','forecTheta', 'smooth'),.verbose = T)%dopar%{
y <- ts(as.numeric(train_month[ID==ID[i],-c("ID")]),frequency=12)
# ETS
ets<- as.vector(forecast(ets(y), h=1, level=95)$mean)
# CES
ces <- as.vector(auto.ces(y,h=1,interval="p",level=.95)$forecast)
#SES
ses <- as.vector(forecast(ses(y),h=1)$mean)
# AutoArima
arima <- as.vector(forecast(auto.arima(y),h=1,level=95)$mean)
# Dotm
dotm <- as.vector(dotm(y,h=1,level=95)$mean)
#Comb
fcs.comb <- median(ets,ces,ses,arima,dotm)
c(ets,ces,ses,arima,dotm,fcs.comb)
}
stopCluster(cl)
Sys.time()-t1 #
i <- 2
y <- ts(as.numeric(train_month[ID==ID[i],-c("ID")]),frequency=12)
# ETS
ets<- as.vector(forecast(ets(y), h=1, level=95)$mean)
ces <- as.vector(auto.ces(y,h=1,interval="p",level=.95)$forecast)
#SES
ses <- as.vector(forecast(ses(y),h=1)$mean)
# AutoArima
arima <- as.vector(forecast(auto.arima(y),h=1,level=95)$mean)
# Dotm
dotm <- as.vector(dotm(y,h=1,level=95)$mean)
#Comb
fcs.comb <- median(ets,ces,ses,arima,dotm)
c(ets,ces,ses,arima,dotm,fcs.comb)
y
ets<- as.vector(forecast(ets(y), h=1)$mean)
# CES
ces <- as.vector(auto.ces(y,h=1,interval="p")$forecast)
#SES
ses <- as.vector(forecast(ses(y),h=1)$mean)
# AutoArima
arima <- as.vector(forecast(auto.arima(y),h=1)$mean)
# Dotm
dotm <- as.vector(dotm(y,h=1)$mean)
#Comb
fcs.comb <- median(ets,ces,ses,arima,dotm)
c(ets,ces,ses,arima,dotm,fcs.comb)
dotm(y,h=1,level=95)
?dotm
sum(y)
rep(0,6)
t1 <- Sys.time()
cl <- makeCluster(11, outfile="")
registerDoParallel(cl)
scum.fcs <- foreach(i = 1:1000,.combine = 'rbind',.inorder=FALSE,
.packages=c('data.table','forecast','forecTheta', 'smooth'))%dopar%{
y <- ts(as.numeric(train_month[ID==ID[i],-c("ID")]),frequency=12)
if(sum(y)==0){
rep(0,6)
}else{
# ETS
ets<- as.vector(forecast(ets(y), h=1, level=95)$mean)
# CES
ces <- as.vector(auto.ces(y,h=1,interval="p",level=.95)$forecast)
#SES
ses <- as.vector(forecast(ses(y),h=1)$mean)
# AutoArima
arima <- as.vector(forecast(auto.arima(y),h=1,level=95)$mean)
# Dotm
dotm <- as.vector(dotm(y,h=1,level=95,)$mean)
#Comb
fcs.comb <- median(ets,ces,ses,arima,dotm)
c(ets,ces,ses,arima,dotm,fcs.comb)
}
}
stopCluster(cl)
Sys.time()-t1 #
t1 <- Sys.time()
cl <- makeCluster(11, outfile="")
registerDoParallel(cl)
scum.fcs <- foreach(i = 1:length(ID),.combine = 'rbind',.inorder=FALSE,
.packages=c('data.table','forecast','forecTheta', 'smooth'))%dopar%{
y <- ts(as.numeric(train_month[ID==ID[i],-c("ID")]),frequency=12)
if(sum(y)==0){
rep(0,6)
}else{
# ETS
ets<- as.vector(forecast(ets(y), h=1, level=95)$mean)
# CES
ces <- as.vector(auto.ces(y,h=1,interval="p",level=.95)$forecast)
#SES
ses <- as.vector(forecast(ses(y),h=1)$mean)
# AutoArima
arima <- as.vector(forecast(auto.arima(y),h=1,level=95)$mean)
# Dotm
dotm <- as.vector(dotm(y,h=1,level=95,)$mean)
#Comb
fcs.comb <- median(ets,ces,ses,arima,dotm)
c(ets,ces,ses,arima,dotm,fcs.comb)
}
}
stopCluster(cl)
Sys.time()-t1 #
### scum
t1 <- Sys.time()
cl <- makeCluster(11, outfile="")
registerDoParallel(cl)
scum.fcs <- foreach(i = 1:1000,.combine = 'rbind',.inorder=FALSE,
.packages=c('data.table','forecast','forecTheta', 'smooth'))%dopar%{
y <- ts(as.numeric(train_month[ID==ID[i],-c("ID")]),frequency=12)
if(sum(y)==0){
rep(0,6)
}else{
# ETS
ets<- as.vector(forecast(ets(y), h=1, level=95)$mean)
# CES
ces <- as.vector(auto.ces(y,h=1,interval="p",level=.95)$forecast)
#SES
ses <- as.vector(forecast(ses(y),h=1)$mean)
# AutoArima
arima <- as.vector(forecast(auto.arima(y),h=1,level=95)$mean)
# Dotm
dotm <- as.vector(dotm(y,h=1,level=95,)$mean)
#Comb
fcs.comb <- median(ets,ces,ses,arima,dotm)
c(ets,ces,ses,arima,dotm,fcs.comb)
}
}
stopCluster(cl)
Sys.time()-t1 #
### scum
t1 <- Sys.time()
cl <- makeCluster(11, outfile="")
registerDoParallel(cl)
scum.fcs <- foreach(i = 1:1000,.combine = 'rbind',.inorder=FALSE,
.packages=c('data.table','forecast','forecTheta', 'smooth'))%dopar%{
y <- ts(as.numeric(train_month[ID==ID[i],-c("ID")]),frequency=12)
if(sum(y)==0){
rep(0,6)
}else{
# ETS
ets<- as.vector(forecast(ets(y), h=1, level=95)$mean)
# CES
ces <- as.vector(auto.ces(y,h=1,interval="p",level=.95)$forecast)
#SES
ses <- as.vector(forecast(ses(y),h=1)$mean)
# AutoArima
arima <- as.vector(forecast(auto.arima(y),h=1,level=95)$mean)
# Dotm
dotm <- as.vector(dotm(y,h=1,level=95,)$mean)
#Comb
fcs.comb <- median(ets,ces,ses,arima,dotm)
c(ID[i],ets,ces,ses,arima,dotm,fcs.comb)
}
}
stopCluster(cl)
Sys.time()-t1 #
warnings()
scum <- data.frame(scum.fcs)
colnames(scum) <- c("ID","ets","ces","ses","arima","dotm","comb")
scum <- scum%>%
remove_rownames()%>%
mutate(ID=as.integer(ID))%>%
mutate_at(vars(-ID),~ifelse((.<0),0,ifelse(.>20,20,.)))
View(scum)
scum <- data.frame(scum.fcs)
t1 <- Sys.time()
cl <- makeCluster(11, outfile="")
registerDoParallel(cl)
scum.fcs <- foreach(i = 1:1000,.combine = 'rbind',.inorder=FALSE,
.packages=c('data.table','forecast','forecTheta', 'smooth'))%dopar%{
y <- ts(as.numeric(train_month[ID==ID[i],-c("ID")]),frequency=12)
if(sum(y)==0){
rep(0,6)
}else{
# ETS
ets<- as.vector(forecast(ets(y), h=1, level=95)$mean)
# CES
ces <- as.vector(auto.ces(y,h=1,interval="p",level=.95)$forecast)
#SES
ses <- as.vector(forecast(ses(y),h=1)$mean)
# AutoArima
arima <- as.vector(forecast(auto.arima(y),h=1,level=95)$mean)
# Dotm
dotm <- as.vector(dotm(y,h=1,level=95,)$mean)
#Comb
fcs.comb <- median(ets,ces,ses,arima,dotm)
c(ID[i],ets,ces,ses,arima,dotm,fcs.comb)
}
}
stopCluster(cl)
Sys.time()-t1 #
t1 <- Sys.time()
cl <- makeCluster(11, outfile="")
registerDoParallel(cl)
scum.fcs <- foreach(i = 1:1000,.combine = 'rbind',.inorder=FALSE,
.packages=c('data.table','forecast','forecTheta', 'smooth'))%dopar%{
y <- ts(as.numeric(train_month[ID==ID[i],-c("ID")]),frequency=12)
if(sum(y)==0){
c(ID[i],rep(0,6))
}else{
# ETS
ets<- as.vector(forecast(ets(y), h=1, level=95)$mean)
# CES
ces <- as.vector(auto.ces(y,h=1,interval="p",level=.95)$forecast)
#SES
ses <- as.vector(forecast(ses(y),h=1)$mean)
# AutoArima
arima <- as.vector(forecast(auto.arima(y),h=1,level=95)$mean)
# Dotm
dotm <- as.vector(dotm(y,h=1,level=95,)$mean)
#Comb
fcs.comb <- median(ets,ces,ses,arima,dotm)
c(ID[i],ets,ces,ses,arima,dotm,fcs.comb)
}
}
stopCluster(cl)
Sys.time()-t1 #
scum <- data.frame(scum.fcs)
colnames(scum) <- c("ID","ets","ces","ses","arima","dotm","comb")
scum <- scum%>%
remove_rownames()%>%
mutate(ID=as.integer(ID))%>%
mutate_at(vars(-ID),~ifelse((.<0),0,ifelse(.>20,20,.))) #clip at (0,20)
rm(list=ls())
##### Simple combination of univariate models #####
#### libraries ####
library(tidyverse)
library(data.table)
library(caret)
library(lubridate)
library(forecast)
library(xgboost)
library(doParallel)
library(smooth)
library(forecTheta)
#### load ####
train_month <- fread("train_month.csv")
##
ID <- unique(train_month$ID)
### scum
t1 <- Sys.time()
cl <- makeCluster(11, outfile="")
registerDoParallel(cl)
scum.fcs <- foreach(i = 1:length(ID),.combine = 'rbind',.inorder=FALSE,
.packages=c('data.table','forecast','forecTheta', 'smooth'))%dopar%{
y <- ts(as.numeric(train_month[ID==ID[i],-c("ID")]),frequency=12)
if(sum(y)==0){
c(ID[i],rep(0,6))
}else{
# ETS
ets<- as.vector(forecast(ets(y), h=1, level=95)$mean)
# CES
ces <- as.vector(auto.ces(y,h=1,interval="p",level=.95)$forecast)
#SES
ses <- as.vector(forecast(ses(y),h=1)$mean)
# AutoArima
arima <- as.vector(forecast(auto.arima(y),h=1,level=95)$mean)
# Dotm
dotm <- as.vector(dotm(y,h=1,level=95,)$mean)
#Comb
fcs.comb <- median(ets,ces,ses,arima,dotm)
c(ID[i],ets,ces,ses,arima,dotm,fcs.comb)
}
}
stopCluster(cl)
Sys.time()-t1 #
scum <- data.frame(scum.fcs)
colnames(scum) <- c("ID","ets","ces","ses","arima","dotm","scrum.comb")
scum <- scum%>%
remove_rownames()%>%
mutate(ID=as.integer(ID))%>%
mutate_at(vars(-ID),~ifelse((.<0),0,ifelse(.>20,20,.))) #clip at (0,20)
for(i in c("ets","ces","ses","arima","dotm","scrum.comb")){
scum%>%
select(ID,item_cnt_month=i)%>%
fwrite(file=paste0("submit/",i,".csv"))
}
### scum
t1 <- Sys.time()
cl <- makeCluster(11, outfile="")
registerDoParallel(cl)
scum.fcs <- foreach(i = 1:length(ID),.combine = 'rbind',.inorder=FALSE,
.packages=c('data.table','forecast','forecTheta', 'smooth'))%dopar%{
y <- ts(as.numeric(train_month[ID==ID[i],-c("ID")]),frequency=12)
if(sum(y)==0){
c(ID[i],rep(0,6))
}else{
# ETS
ets<- as.vector(forecast(ets(y), h=1, level=95)$mean)
# CES
ces <- as.vector(auto.ces(y,h=1,interval="p",level=.95)$forecast)
#SES
ses <- as.vector(forecast(ses(y),h=1)$mean)
# AutoArima
arima <- as.vector(forecast(auto.arima(y),h=1,level=95)$mean)
# Dotm
dotm <- as.vector(dotm(y,h=1,level=95,)$mean)
#Comb
fcs.comb <- median(ets,ces,ses,arima,dotm)
c(ID[i],ets,ces,ses,arima,dotm,fcs.comb)
}
}
stopCluster(cl)
Sys.time()-t1 #
i = 15044
y <- ts(as.numeric(train_month[ID==ID[i],-c("ID")]),frequency=12)
sum(y)
ets<- as.vector(forecast(ets(y), h=1, level=95)$mean)
# CES
ces <- as.vector(auto.ces(y,h=1,interval="p",level=.95)$forecast)
#SES
ses <- as.vector(forecast(ses(y),h=1)$mean)
# AutoArima
arima <- as.vector(forecast(auto.arima(y),h=1,level=95)$mean)
# Dotm
dotm <- as.vector(dotm(y,h=1,level=95,)$mean)
#Comb
fcs.comb <- median(ets,ces,ses,arima,dotm)
c(ID[i],ets,ces,ses,arima,dotm,fcs.comb)
y
# ETS
ets<- as.vector(forecast(ets(y), h=1, level=95)$mean)
auto.ces(y,h=1,interval="p",level=.95)
auto.ces(y,h=1,interval="p",level=.95)
ses <- as.vector(forecast(ses(y),h=1)$mean)
# AutoArima
arima <- as.vector(forecast(auto.arima(y),h=1,level=95)$mean)
# Dotm
dotm <- as.vector(dotm(y,h=1,level=95,)$mean)
y
auto.ces(y)
auto.arima(y)
auto.ses(y)
auto.ces(y)
y <- ts(as.vector(train_month[ID==ID[i],-c("ID")]),frequency=12)
auto.ces(y)
y
y <- ts(as.numeric(train_month[ID==ID[i],-c("ID")]),frequency=12)
auto.ces(as.numeric(train_month[ID==ID[i],-c("ID")]))
y <- as.numeric(train_month[ID==ID[i],-c("ID")])
ets<- as.vector(forecast(ets(y), h=1, level=95)$mean)
# CES
ces <- as.vector(auto.ces(y,h=1,interval="p",level=.95)$forecast)
#SES
ses <- as.vector(forecast(ses(y),h=1)$mean)
# AutoArima
arima <- as.vector(forecast(auto.arima(y),h=1,level=95)$mean)
# Dotm
dotm <- as.vector(dotm(y,h=1,level=95,)$mean)
#Comb
fcs.comb <- median(ets,ces,ses,arima,dotm)
c(ID[i],ets,ces,ses,arima,dotm,fcs.comb)
y <- ts(as.numeric(train_month[ID==ID[i],-c("ID")]),frequency=12)
ets<- as.vector(forecast(ets(y), h=1, level=95)$mean)
# CES
ces <- as.vector(auto.ces(y,h=1,interval="p",level=.95)$forecast)
#SES
ses <- as.vector(forecast(ses(y),h=1)$mean)
# AutoArima
arima <- as.vector(forecast(auto.arima(y),h=1,level=95)$mean)
# Dotm
dotm <- as.vector(dotm(y,h=1,level=95,)$mean)
#Comb
fcs.comb <- median(ets,ces,ses,arima,dotm)
c(ID[i],ets,ces,ses,arima,dotm,fcs.comb)
# CES
ces <- as.vector(auto.ces(as.vector(y),h=1,interval="p",level=.95)$forecast)
ets<- as.vector(forecast(ets(y), h=1, level=95)$mean)
# CES
ces <- as.vector(auto.ces(as.vector(y),h=1,interval="p",level=.95)$forecast)
#SES
ses <- as.vector(forecast(ses(y),h=1)$mean)
# AutoArima
arima <- as.vector(forecast(auto.arima(y),h=1,level=95)$mean)
# Dotm
dotm <- as.vector(dotm(y,h=1,level=95,)$mean)
#Comb
fcs.comb <- median(ets,ces,ses,arima,dotm)
c(ID[i],ets,ces,ses,arima,dotm,fcs.comb)
t1 <- Sys.time()
cl <- makeCluster(11, outfile="")
registerDoParallel(cl)
scum.fcs <- foreach(i = 15044,.combine = 'rbind',.inorder=FALSE,
.packages=c('data.table','forecast','forecTheta', 'smooth'))%dopar%{
y <- ts(as.numeric(train_month[ID==ID[i],-c("ID")]),frequency=12)
if(sum(y)==0){
c(ID[i],rep(0,6))
}else{
# ETS
ets<- as.vector(forecast(ets(y), h=1, level=95)$mean)
# CES
ces <- as.vector(auto.ces(as.vector(y),h=1,interval="p",level=.95)$forecast)
#SES
ses <- as.vector(forecast(ses(y),h=1)$mean)
# AutoArima
arima <- as.vector(forecast(auto.arima(y),h=1,level=95)$mean)
# Dotm
dotm <- as.vector(dotm(y,h=1,level=95,)$mean)
#Comb
fcs.comb <- median(ets,ces,ses,arima,dotm)
c(ID[i],ets,ces,ses,arima,dotm,fcs.comb)
}
}
stopCluster(cl)
Sys.time()-t1 #
scum <- data.frame(scum.fcs)
colnames(scum) <- c("ID","ets","ces","ses","arima","dotm","scrum.comb")
scum <- scum%>%
remove_rownames()%>%
mutate(ID=as.integer(ID))%>%
mutate_at(vars(-ID),~ifelse((.<0),0,ifelse(.>20,20,.))) #clip at (0,20)
View(scum)
### scum
t1 <- Sys.time()
cl <- makeCluster(11, outfile="")
registerDoParallel(cl)
scum.fcs <- foreach(i = 15000:16000,.combine = 'rbind',.inorder=FALSE,
.packages=c('data.table','forecast','forecTheta', 'smooth'))%dopar%{
y <- ts(as.numeric(train_month[ID==ID[i],-c("ID")]),frequency=12)
if(sum(y)==0){
c(ID[i],rep(0,6))
}else{
# ETS
ets<- as.vector(forecast(ets(y), h=1, level=95)$mean)
# CES
ces <- as.vector(auto.ces(as.vector(y),h=1,interval="p",level=.95)$forecast)
#SES
ses <- as.vector(forecast(ses(y),h=1)$mean)
# AutoArima
arima <- as.vector(forecast(auto.arima(y),h=1,level=95)$mean)
# Dotm
dotm <- as.vector(dotm(y,h=1,level=95,)$mean)
#Comb
fcs.comb <- median(ets,ces,ses,arima,dotm)
c(ID[i],ets,ces,ses,arima,dotm,fcs.comb)
}
}
stopCluster(cl)
Sys.time()-t1 #
scum <- data.frame(scum.fcs)
colnames(scum) <- c("ID","ets","ces","ses","arima","dotm","scrum.comb")
scum <- scum%>%
remove_rownames()%>%
mutate(ID=as.integer(ID))%>%
mutate_at(vars(-ID),~ifelse((.<0),0,ifelse(.>20,20,.))) #clip at (0,20)
?foreach
rm(list=ls())
